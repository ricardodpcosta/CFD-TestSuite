% Auto-generated by generate_code.py

% Global constants
global rA = 1.0;
global rAB = 0.75;
global rB = 0.5;
global betaAB_1 = 0.04;
global betaAB_2 = 8.0;
global alphaA = 2.0;
global alphaB = 1.0;
global wA = 1.0;
global wB = -1.0;

% Function RAB
function res = RAB(x, y)
    global rA;
    global rAB;
    global rB;
    global betaAB_1;
    global betaAB_2;
    global alphaA;
    global alphaB;
    global wA;
    global wB;
    r = sqrt(x.^2 + y.^2);
    theta = atan2(y, x);
    res = rAB.*(betaAB_1.*cos(betaAB_2.*theta) + 1);
end

% Function nAB
function res = nAB(x, y)
    global rA;
    global rAB;
    global rB;
    global betaAB_1;
    global betaAB_2;
    global alphaA;
    global alphaB;
    global wA;
    global wB;
    r = sqrt(x.^2 + y.^2);
    theta = atan2(y, x);
    res = zeros(2,1);
    res(1) = (betaAB_1.*betaAB_2.*sin(theta).*sin(betaAB_2.*theta) - betaAB_1.*cos(theta). ...
        *cos(betaAB_2.*theta) - cos(theta))./sqrt(betaAB_1.^2.*betaAB_2.^2.*sin(betaAB_2.*theta).^2 ...
        + betaAB_1.^2.*cos(betaAB_2.*theta).^2 + 2*betaAB_1.*cos(betaAB_2.*theta) + 1);
    res(2) = -(betaAB_1.*betaAB_2.*sin(betaAB_2.*theta).*cos(theta) + betaAB_1.*sin(theta). ...
        *cos(betaAB_2.*theta) + sin(theta))./sqrt(betaAB_1.^2.*betaAB_2.^2.*sin(betaAB_2.*theta).^2 ...
        + betaAB_1.^2.*cos(betaAB_2.*theta).^2 + 2*betaAB_1.*cos(betaAB_2.*theta) + 1);
end

% Function uA
function res = uA(x, y)
    global rA;
    global rAB;
    global rB;
    global betaAB_1;
    global betaAB_2;
    global alphaA;
    global alphaB;
    global wA;
    global wB;
    r = sqrt(x.^2 + y.^2);
    theta = atan2(y, x);
    res = zeros(2,1);
    res(1) = -betaAB_1.*betaAB_2.*r.*rAB.*wA.*(r - rA).*sin(betaAB_2.*theta).*cos(theta)./(betaAB_1. ...
        *rAB.*cos(betaAB_2.*theta) - rA + rAB) - r.*wA.*sin(theta);
    res(2) = -betaAB_1.*betaAB_2.*r.*rAB.*wA.*(r - rA).*sin(theta).*sin(betaAB_2.*theta)./(betaAB_1. ...
        *rAB.*cos(betaAB_2.*theta) - rA + rAB) + r.*wA.*cos(theta);
end

% Function uB
function res = uB(x, y)
    global rA;
    global rAB;
    global rB;
    global betaAB_1;
    global betaAB_2;
    global alphaA;
    global alphaB;
    global wA;
    global wB;
    r = sqrt(x.^2 + y.^2);
    theta = atan2(y, x);
    res = zeros(2,1);
    res(1) = -betaAB_1.*betaAB_2.*r.*rAB.*wB.*(r - rB).*sin(betaAB_2.*theta).*cos(theta)./(betaAB_1. ...
        *rAB.*cos(betaAB_2.*theta) + rAB - rB) - r.*wB.*sin(theta);
    res(2) = -betaAB_1.*betaAB_2.*r.*rAB.*wB.*(r - rB).*sin(theta).*sin(betaAB_2.*theta)./(betaAB_1. ...
        *rAB.*cos(betaAB_2.*theta) + rAB - rB) + r.*wB.*cos(theta);
end

% Function phiA
function res = phiA(x, y)
    global rA;
    global rAB;
    global rB;
    global betaAB_1;
    global betaAB_2;
    global alphaA;
    global alphaB;
    global wA;
    global wB;
    r = sqrt(x.^2 + y.^2);
    theta = atan2(y, x);
    aA = alphaB./(alphaA.*log(rAB) - alphaA.*log(rB) + alphaB.*log(rA) - alphaB.*log(rAB));
    bA = (alphaA.*log(rAB) - alphaA.*log(rB) - alphaB.*log(rAB))./(alphaA.*log(rAB) - alphaA.*log(rB) ...
        + alphaB.*log(rA) - alphaB.*log(rAB));
    res = aA.*log(-(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1.*r.^2.*rAB. ...
        *cos(betaAB_2.*theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) + betaAB_1.*rA. ...
        *rAB.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r.*rAB.*rB). ...
        /((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).*(betaAB_1.*rAB.*cos(betaAB_2. ...
        *theta) + rAB - rB))) + bA;
end

% Function phiB
function res = phiB(x, y)
    global rA;
    global rAB;
    global rB;
    global betaAB_1;
    global betaAB_2;
    global alphaA;
    global alphaB;
    global wA;
    global wB;
    r = sqrt(x.^2 + y.^2);
    theta = atan2(y, x);
    aB = alphaA./(alphaA.*log(rAB) - alphaA.*log(rB) + alphaB.*log(rA) - alphaB.*log(rAB));
    bB = -alphaA.*log(rB)./(alphaA.*log(rAB) - alphaA.*log(rB) + alphaB.*log(rA) - alphaB.*log(rAB));
    res = aB.*log(-(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1.*r.^2.*rAB. ...
        *cos(betaAB_2.*theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) + betaAB_1.*rA. ...
        *rAB.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r.*rAB.*rB). ...
        /((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).*(betaAB_1.*rAB.*cos(betaAB_2. ...
        *theta) + rAB - rB))) + bB;
end

% Function fA
function res = fA(x, y)
    global rA;
    global rAB;
    global rB;
    global betaAB_1;
    global betaAB_2;
    global alphaA;
    global alphaB;
    global wA;
    global wB;
    r = sqrt(x.^2 + y.^2);
    theta = atan2(y, x);
    aA = alphaB./(alphaA.*log(rAB) - alphaA.*log(rB) + alphaB.*log(rA) - alphaB.*log(rAB));
    bA = (alphaA.*log(rAB) - alphaA.*log(rB) - alphaB.*log(rAB))./(alphaA.*log(rAB) - alphaA.*log(rB) ...
        + alphaB.*log(rA) - alphaB.*log(rAB));
    res = -aA.*betaAB_1.*betaAB_2.*rAB.*wA.*(r - rA).*(-betaAB_1.^3.*r.*rAB.^3.*cos(betaAB_2. ...
        *theta).^3 + 2*betaAB_1.^2.*r.^2.*rAB.^2.*cos(betaAB_2.*theta).^2 - 3*betaAB_1.^2.*r. ...
        *rAB.^3.*cos(betaAB_2.*theta).^2 + betaAB_1.^2.*r.*rAB.^2.*rB.*cos(betaAB_2.*theta).^2 ...
        - betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1.^2.*rAB.^2.*rB. ...
        *cos(betaAB_2.*theta).^2 + 2*betaAB_1.*r.^2.*rAB.^2.*cos(betaAB_2.*theta) - 2*betaAB_1. ...
        *r.^2.*rAB.*rB.*cos(betaAB_2.*theta) + betaAB_1.*r.*rA.*rAB.^2.*cos(betaAB_2.*theta) ...
        - betaAB_1.*r.*rA.*rAB.*rB.*cos(betaAB_2.*theta) - 3*betaAB_1.*r.*rAB.^3.*cos(betaAB_2. ...
        *theta) + 3*betaAB_1.*r.*rAB.^2.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB.^2 - 2*r.*rA. ...
        *rAB.*rB - r.*rA.*rAB + r.*rA.*rB.^2 + r.*rA.*rB - r.*rAB.^3 + 2*r.*rAB.^2.*rB + r. ...
        *rAB.^2 - r.*rAB.*rB.^2 - r.*rAB.*rB + rA.*rAB.*rB - rA.*rB.^2 - rAB.^2.*rB + rAB. ...
        *rB.^2).*sin(betaAB_2.*theta)./((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB). ...
        *(betaAB_1.*rAB.*cos(betaAB_2.*theta) + rAB - rB).*(-betaAB_1.^2.*r.*rAB.^2. ...
        *cos(betaAB_2.*theta).^2 + betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*r. ...
        *rAB.^2.*cos(betaAB_2.*theta) + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) + r.*rA. ...
        *rAB - r.*rA.*rB - r.*rAB.^2 + r.*rAB.*rB)) - alphaA.*((2*aA.*betaAB_1.*r.*rAB. ...
        *cos(betaAB_2.*theta)./(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1. ...
        *r.^2.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) ...
        + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r. ...
        *rAB.*rB) + aA.*r.*(-betaAB_1.^2.*rAB.^2.*cos(betaAB_2.*theta).^2 + 2*betaAB_1.*r.*rAB. ...
        *cos(betaAB_2.*theta) - 2*betaAB_1.*rAB.^2.*cos(betaAB_2.*theta) + rA.*rAB - rA.*rB ...
        - rAB.^2 + rAB.*rB).*(betaAB_1.^2.*rAB.^2.*cos(betaAB_2.*theta).^2 - 2*betaAB_1.*r. ...
        *rAB.*cos(betaAB_2.*theta) + 2*betaAB_1.*rAB.^2.*cos(betaAB_2.*theta) - rA.*rAB + rA. ...
        *rB + rAB.^2 - rAB.*rB)./(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1. ...
        *r.^2.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) ...
        + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r. ...
        *rAB.*rB).^2 + aA.*(-betaAB_1.^2.*rAB.^2.*cos(betaAB_2.*theta).^2 + 2*betaAB_1.*r.*rAB. ...
        *cos(betaAB_2.*theta) - 2*betaAB_1.*rAB.^2.*cos(betaAB_2.*theta) + rA.*rAB - rA.*rB ...
        - rAB.^2 + rAB.*rB)./(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1. ...
        *r.^2.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) ...
        + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r. ...
        *rAB.*rB))./r + (aA.*betaAB_1.*betaAB_2.*rAB.*(betaAB_1.*rAB.*cos(betaAB_2.*theta) ...
        - rA + rAB).*(-betaAB_1.*betaAB_2.*rAB.*(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2. ...
        *theta).^2 + betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*r.*rAB.^2. ...
        *cos(betaAB_2.*theta) + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB - r. ...
        *rA.*rB - r.*rAB.^2 + r.*rAB.*rB).*sin(betaAB_2.*theta)./((betaAB_1.*rAB.*cos(betaAB_2. ...
        *theta) - rA + rAB).*(betaAB_1.*rAB.*cos(betaAB_2.*theta) + rAB - rB).^2) - betaAB_1. ...
        *betaAB_2.*rAB.*(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1.*r.^2. ...
        *rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) + betaAB_1. ...
        *rA.*rAB.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r.*rAB.*rB). ...
        *sin(betaAB_2.*theta)./((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).^2.*(betaAB_1. ...
        *rAB.*cos(betaAB_2.*theta) + rAB - rB)) - (2*betaAB_1.^2.*betaAB_2.*r.*rAB.^2. ...
        *sin(betaAB_2.*theta).*cos(betaAB_2.*theta) - betaAB_1.*betaAB_2.*r.^2.*rAB. ...
        *sin(betaAB_2.*theta) + 2*betaAB_1.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2.*theta) ...
        - betaAB_1.*betaAB_2.*rA.*rAB.*rB.*sin(betaAB_2.*theta))./((betaAB_1.*rAB. ...
        *cos(betaAB_2.*theta) - rA + rAB).*(betaAB_1.*rAB.*cos(betaAB_2.*theta) + rAB - rB))). ...
        *sin(betaAB_2.*theta)./(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1. ...
        *r.^2.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) ...
        + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r. ...
        *rAB.*rB) + aA.*betaAB_1.*betaAB_2.*rAB.*(betaAB_1.*rAB.*cos(betaAB_2.*theta) + rAB ...
        - rB).*(-betaAB_1.*betaAB_2.*rAB.*(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 ...
        + betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2. ...
        *theta) + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r. ...
        *rAB.^2 + r.*rAB.*rB).*sin(betaAB_2.*theta)./((betaAB_1.*rAB.*cos(betaAB_2.*theta) ...
        - rA + rAB).*(betaAB_1.*rAB.*cos(betaAB_2.*theta) + rAB - rB).^2) - betaAB_1.*betaAB_2. ...
        *rAB.*(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1.*r.^2.*rAB. ...
        *cos(betaAB_2.*theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) + betaAB_1.*rA. ...
        *rAB.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r.*rAB.*rB). ...
        *sin(betaAB_2.*theta)./((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).^2.*(betaAB_1. ...
        *rAB.*cos(betaAB_2.*theta) + rAB - rB)) - (2*betaAB_1.^2.*betaAB_2.*r.*rAB.^2. ...
        *sin(betaAB_2.*theta).*cos(betaAB_2.*theta) - betaAB_1.*betaAB_2.*r.^2.*rAB. ...
        *sin(betaAB_2.*theta) + 2*betaAB_1.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2.*theta) ...
        - betaAB_1.*betaAB_2.*rA.*rAB.*rB.*sin(betaAB_2.*theta))./((betaAB_1.*rAB. ...
        *cos(betaAB_2.*theta) - rA + rAB).*(betaAB_1.*rAB.*cos(betaAB_2.*theta) + rAB - rB))). ...
        *sin(betaAB_2.*theta)./(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1. ...
        *r.^2.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) ...
        + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r. ...
        *rAB.*rB) - aA.*(betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).*(betaAB_1.*rAB. ...
        *cos(betaAB_2.*theta) + rAB - rB).*(-betaAB_1.*betaAB_2.*rAB.*(-betaAB_1.^2.*r.*rAB.^2. ...
        *cos(betaAB_2.*theta).^2 + betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*r. ...
        *rAB.^2.*cos(betaAB_2.*theta) + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) + r.*rA. ...
        *rAB - r.*rA.*rB - r.*rAB.^2 + r.*rAB.*rB).*sin(betaAB_2.*theta)./((betaAB_1.*rAB. ...
        *cos(betaAB_2.*theta) - rA + rAB).*(betaAB_1.*rAB.*cos(betaAB_2.*theta) + rAB ...
        - rB).^2) - betaAB_1.*betaAB_2.*rAB.*(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 ...
        + betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2. ...
        *theta) + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r. ...
        *rAB.^2 + r.*rAB.*rB).*sin(betaAB_2.*theta)./((betaAB_1.*rAB.*cos(betaAB_2.*theta) ...
        - rA + rAB).^2.*(betaAB_1.*rAB.*cos(betaAB_2.*theta) + rAB - rB)) - (2*betaAB_1.^2. ...
        *betaAB_2.*r.*rAB.^2.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta) - betaAB_1.*betaAB_2. ...
        *r.^2.*rAB.*sin(betaAB_2.*theta) + 2*betaAB_1.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2. ...
        *theta) - betaAB_1.*betaAB_2.*rA.*rAB.*rB.*sin(betaAB_2.*theta))./((betaAB_1.*rAB. ...
        *cos(betaAB_2.*theta) - rA + rAB).*(betaAB_1.*rAB.*cos(betaAB_2.*theta) + rAB - rB))). ...
        *(-2*betaAB_1.^2.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta) ...
        + betaAB_1.*betaAB_2.*r.^2.*rAB.*sin(betaAB_2.*theta) - 2*betaAB_1.*betaAB_2.*r. ...
        *rAB.^2.*sin(betaAB_2.*theta) + betaAB_1.*betaAB_2.*rA.*rAB.*rB.*sin(betaAB_2.*theta)). ...
        /(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1.*r.^2.*rAB.*cos(betaAB_2. ...
        *theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) + betaAB_1.*rA.*rAB.*rB. ...
        *cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r.*rAB.*rB).^2 - aA. ...
        *(betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).*(betaAB_1.*rAB.*cos(betaAB_2. ...
        *theta) + rAB - rB).*(-2*betaAB_1.^2.*betaAB_2.^2.*rAB.^2.*(-betaAB_1.^2.*r.*rAB.^2. ...
        *cos(betaAB_2.*theta).^2 + betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*r. ...
        *rAB.^2.*cos(betaAB_2.*theta) + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) + r.*rA. ...
        *rAB - r.*rA.*rB - r.*rAB.^2 + r.*rAB.*rB).*sin(betaAB_2.*theta).^2./((betaAB_1.*rAB. ...
        *cos(betaAB_2.*theta) - rA + rAB).*(betaAB_1.*rAB.*cos(betaAB_2.*theta) + rAB ...
        - rB).^3) - 2*betaAB_1.^2.*betaAB_2.^2.*rAB.^2.*(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2. ...
        *theta).^2 + betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*r.*rAB.^2. ...
        *cos(betaAB_2.*theta) + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB - r. ...
        *rA.*rB - r.*rAB.^2 + r.*rAB.*rB).*sin(betaAB_2.*theta).^2./((betaAB_1.*rAB. ...
        *cos(betaAB_2.*theta) - rA + rAB).^2.*(betaAB_1.*rAB.*cos(betaAB_2.*theta) + rAB ...
        - rB).^2) - 2*betaAB_1.^2.*betaAB_2.^2.*rAB.^2.*(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2. ...
        *theta).^2 + betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*r.*rAB.^2. ...
        *cos(betaAB_2.*theta) + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB - r. ...
        *rA.*rB - r.*rAB.^2 + r.*rAB.*rB).*sin(betaAB_2.*theta).^2./((betaAB_1.*rAB. ...
        *cos(betaAB_2.*theta) - rA + rAB).^3.*(betaAB_1.*rAB.*cos(betaAB_2.*theta) + rAB ...
        - rB)) - betaAB_1.*betaAB_2.^2.*rAB.*(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 ...
        + betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2. ...
        *theta) + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r. ...
        *rAB.^2 + r.*rAB.*rB).*cos(betaAB_2.*theta)./((betaAB_1.*rAB.*cos(betaAB_2.*theta) ...
        - rA + rAB).*(betaAB_1.*rAB.*cos(betaAB_2.*theta) + rAB - rB).^2) - betaAB_1. ...
        *betaAB_2.^2.*rAB.*(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1.*r.^2. ...
        *rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) + betaAB_1. ...
        *rA.*rAB.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r.*rAB.*rB). ...
        *cos(betaAB_2.*theta)./((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).^2.*(betaAB_1. ...
        *rAB.*cos(betaAB_2.*theta) + rAB - rB)) - 2*betaAB_1.*betaAB_2.*rAB.*(2*betaAB_1.^2. ...
        *betaAB_2.*r.*rAB.^2.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta) - betaAB_1.*betaAB_2. ...
        *r.^2.*rAB.*sin(betaAB_2.*theta) + 2*betaAB_1.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2. ...
        *theta) - betaAB_1.*betaAB_2.*rA.*rAB.*rB.*sin(betaAB_2.*theta)).*sin(betaAB_2.*theta). ...
        /((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).*(betaAB_1.*rAB.*cos(betaAB_2. ...
        *theta) + rAB - rB).^2) - 2*betaAB_1.*betaAB_2.*rAB.*(2*betaAB_1.^2.*betaAB_2.*r. ...
        *rAB.^2.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta) - betaAB_1.*betaAB_2.*r.^2.*rAB. ...
        *sin(betaAB_2.*theta) + 2*betaAB_1.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2.*theta) ...
        - betaAB_1.*betaAB_2.*rA.*rAB.*rB.*sin(betaAB_2.*theta)).*sin(betaAB_2.*theta). ...
        /((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).^2.*(betaAB_1.*rAB.*cos(betaAB_2. ...
        *theta) + rAB - rB)) - (-2*betaAB_1.^2.*betaAB_2.^2.*r.*rAB.^2.*sin(betaAB_2. ...
        *theta).^2 + 2*betaAB_1.^2.*betaAB_2.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1. ...
        *betaAB_2.^2.*r.^2.*rAB.*cos(betaAB_2.*theta) + 2*betaAB_1.*betaAB_2.^2.*r.*rAB.^2. ...
        *cos(betaAB_2.*theta) - betaAB_1.*betaAB_2.^2.*rA.*rAB.*rB.*cos(betaAB_2.*theta)). ...
        /((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).*(betaAB_1.*rAB.*cos(betaAB_2. ...
        *theta) + rAB - rB)))./(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1. ...
        *r.^2.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) ...
        + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r. ...
        *rAB.*rB))./r.^2);
end

% Function fB
function res = fB(x, y)
    global rA;
    global rAB;
    global rB;
    global betaAB_1;
    global betaAB_2;
    global alphaA;
    global alphaB;
    global wA;
    global wB;
    r = sqrt(x.^2 + y.^2);
    theta = atan2(y, x);
    aB = alphaA./(alphaA.*log(rAB) - alphaA.*log(rB) + alphaB.*log(rA) - alphaB.*log(rAB));
    bB = -alphaA.*log(rB)./(alphaA.*log(rAB) - alphaA.*log(rB) + alphaB.*log(rA) - alphaB.*log(rAB));
    res = -aB.*betaAB_1.*betaAB_2.*rAB.*wB.*(r - rB).*(-betaAB_1.^3.*r.*rAB.^3.*cos(betaAB_2. ...
        *theta).^3 + 2*betaAB_1.^2.*r.^2.*rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1.^2.*r.*rA. ...
        *rAB.^2.*cos(betaAB_2.*theta).^2 - 3*betaAB_1.^2.*r.*rAB.^3.*cos(betaAB_2.*theta).^2 ...
        - betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1.^2.*rA.*rAB.^2. ...
        *cos(betaAB_2.*theta).^2 - 2*betaAB_1.*r.^2.*rA.*rAB.*cos(betaAB_2.*theta) + 2 ...
        *betaAB_1.*r.^2.*rAB.^2.*cos(betaAB_2.*theta) + 3*betaAB_1.*r.*rA.*rAB.^2. ...
        *cos(betaAB_2.*theta) - betaAB_1.*r.*rA.*rAB.*rB.*cos(betaAB_2.*theta) - 3*betaAB_1.*r. ...
        *rAB.^3.*cos(betaAB_2.*theta) + betaAB_1.*r.*rAB.^2.*rB.*cos(betaAB_2.*theta) - r. ...
        *rA.^2.*rAB + r.*rA.^2.*rB + 2*r.*rA.*rAB.^2 - 2*r.*rA.*rAB.*rB - r.*rA.*rAB + r.*rA. ...
        *rB - r.*rAB.^3 + r.*rAB.^2.*rB + r.*rAB.^2 - r.*rAB.*rB + rA.^2.*rAB - rA.^2.*rB - rA. ...
        *rAB.^2 + rA.*rAB.*rB).*sin(betaAB_2.*theta)./((betaAB_1.*rAB.*cos(betaAB_2.*theta) ...
        - rA + rAB).*(betaAB_1.*rAB.*cos(betaAB_2.*theta) + rAB - rB).*(-betaAB_1.^2.*r. ...
        *rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) - 2 ...
        *betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2. ...
        *theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r.*rAB.*rB)) - alphaB.*((2*aB.*betaAB_1. ...
        *r.*rAB.*cos(betaAB_2.*theta)./(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 ...
        + betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2. ...
        *theta) + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r. ...
        *rAB.^2 + r.*rAB.*rB) + aB.*r.*(-betaAB_1.^2.*rAB.^2.*cos(betaAB_2.*theta).^2 + 2 ...
        *betaAB_1.*r.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*rAB.^2.*cos(betaAB_2.*theta) ...
        + rA.*rAB - rA.*rB - rAB.^2 + rAB.*rB).*(betaAB_1.^2.*rAB.^2.*cos(betaAB_2.*theta).^2 ...
        - 2*betaAB_1.*r.*rAB.*cos(betaAB_2.*theta) + 2*betaAB_1.*rAB.^2.*cos(betaAB_2.*theta) ...
        - rA.*rAB + rA.*rB + rAB.^2 - rAB.*rB)./(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2. ...
        *theta).^2 + betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*r.*rAB.^2. ...
        *cos(betaAB_2.*theta) + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB - r. ...
        *rA.*rB - r.*rAB.^2 + r.*rAB.*rB).^2 + aB.*(-betaAB_1.^2.*rAB.^2.*cos(betaAB_2. ...
        *theta).^2 + 2*betaAB_1.*r.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*rAB.^2. ...
        *cos(betaAB_2.*theta) + rA.*rAB - rA.*rB - rAB.^2 + rAB.*rB)./(-betaAB_1.^2.*r.*rAB.^2. ...
        *cos(betaAB_2.*theta).^2 + betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*r. ...
        *rAB.^2.*cos(betaAB_2.*theta) + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) + r.*rA. ...
        *rAB - r.*rA.*rB - r.*rAB.^2 + r.*rAB.*rB))./r + (aB.*betaAB_1.*betaAB_2.*rAB. ...
        *(betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).*(-betaAB_1.*betaAB_2.*rAB.*( ...
        -betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1.*r.^2.*rAB.*cos(betaAB_2. ...
        *theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) + betaAB_1.*rA.*rAB.*rB. ...
        *cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r.*rAB.*rB).*sin(betaAB_2. ...
        *theta)./((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).*(betaAB_1.*rAB. ...
        *cos(betaAB_2.*theta) + rAB - rB).^2) - betaAB_1.*betaAB_2.*rAB.*(-betaAB_1.^2.*r. ...
        *rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) - 2 ...
        *betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2. ...
        *theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r.*rAB.*rB).*sin(betaAB_2.*theta). ...
        /((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).^2.*(betaAB_1.*rAB.*cos(betaAB_2. ...
        *theta) + rAB - rB)) - (2*betaAB_1.^2.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2.*theta). ...
        *cos(betaAB_2.*theta) - betaAB_1.*betaAB_2.*r.^2.*rAB.*sin(betaAB_2.*theta) + 2 ...
        *betaAB_1.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2.*theta) - betaAB_1.*betaAB_2.*rA.*rAB.*rB. ...
        *sin(betaAB_2.*theta))./((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).*(betaAB_1. ...
        *rAB.*cos(betaAB_2.*theta) + rAB - rB))).*sin(betaAB_2.*theta)./(-betaAB_1.^2.*r. ...
        *rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) - 2 ...
        *betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2. ...
        *theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r.*rAB.*rB) + aB.*betaAB_1.*betaAB_2. ...
        *rAB.*(betaAB_1.*rAB.*cos(betaAB_2.*theta) + rAB - rB).*(-betaAB_1.*betaAB_2.*rAB.*( ...
        -betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1.*r.^2.*rAB.*cos(betaAB_2. ...
        *theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) + betaAB_1.*rA.*rAB.*rB. ...
        *cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r.*rAB.*rB).*sin(betaAB_2. ...
        *theta)./((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).*(betaAB_1.*rAB. ...
        *cos(betaAB_2.*theta) + rAB - rB).^2) - betaAB_1.*betaAB_2.*rAB.*(-betaAB_1.^2.*r. ...
        *rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) - 2 ...
        *betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2. ...
        *theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r.*rAB.*rB).*sin(betaAB_2.*theta). ...
        /((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).^2.*(betaAB_1.*rAB.*cos(betaAB_2. ...
        *theta) + rAB - rB)) - (2*betaAB_1.^2.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2.*theta). ...
        *cos(betaAB_2.*theta) - betaAB_1.*betaAB_2.*r.^2.*rAB.*sin(betaAB_2.*theta) + 2 ...
        *betaAB_1.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2.*theta) - betaAB_1.*betaAB_2.*rA.*rAB.*rB. ...
        *sin(betaAB_2.*theta))./((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).*(betaAB_1. ...
        *rAB.*cos(betaAB_2.*theta) + rAB - rB))).*sin(betaAB_2.*theta)./(-betaAB_1.^2.*r. ...
        *rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) - 2 ...
        *betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2. ...
        *theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r.*rAB.*rB) - aB.*(betaAB_1.*rAB. ...
        *cos(betaAB_2.*theta) - rA + rAB).*(betaAB_1.*rAB.*cos(betaAB_2.*theta) + rAB - rB).*( ...
        -betaAB_1.*betaAB_2.*rAB.*(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1. ...
        *r.^2.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) ...
        + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r. ...
        *rAB.*rB).*sin(betaAB_2.*theta)./((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB). ...
        *(betaAB_1.*rAB.*cos(betaAB_2.*theta) + rAB - rB).^2) - betaAB_1.*betaAB_2.*rAB.*( ...
        -betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1.*r.^2.*rAB.*cos(betaAB_2. ...
        *theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) + betaAB_1.*rA.*rAB.*rB. ...
        *cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r.*rAB.*rB).*sin(betaAB_2. ...
        *theta)./((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).^2.*(betaAB_1.*rAB. ...
        *cos(betaAB_2.*theta) + rAB - rB)) - (2*betaAB_1.^2.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2. ...
        *theta).*cos(betaAB_2.*theta) - betaAB_1.*betaAB_2.*r.^2.*rAB.*sin(betaAB_2.*theta) + 2 ...
        *betaAB_1.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2.*theta) - betaAB_1.*betaAB_2.*rA.*rAB.*rB. ...
        *sin(betaAB_2.*theta))./((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).*(betaAB_1. ...
        *rAB.*cos(betaAB_2.*theta) + rAB - rB))).*(-2*betaAB_1.^2.*betaAB_2.*r.*rAB.^2. ...
        *sin(betaAB_2.*theta).*cos(betaAB_2.*theta) + betaAB_1.*betaAB_2.*r.^2.*rAB. ...
        *sin(betaAB_2.*theta) - 2*betaAB_1.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2.*theta) ...
        + betaAB_1.*betaAB_2.*rA.*rAB.*rB.*sin(betaAB_2.*theta))./(-betaAB_1.^2.*r.*rAB.^2. ...
        *cos(betaAB_2.*theta).^2 + betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*r. ...
        *rAB.^2.*cos(betaAB_2.*theta) + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) + r.*rA. ...
        *rAB - r.*rA.*rB - r.*rAB.^2 + r.*rAB.*rB).^2 - aB.*(betaAB_1.*rAB.*cos(betaAB_2. ...
        *theta) - rA + rAB).*(betaAB_1.*rAB.*cos(betaAB_2.*theta) + rAB - rB).*(-2*betaAB_1.^2. ...
        *betaAB_2.^2.*rAB.^2.*(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1. ...
        *r.^2.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) ...
        + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r. ...
        *rAB.*rB).*sin(betaAB_2.*theta).^2./((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB). ...
        *(betaAB_1.*rAB.*cos(betaAB_2.*theta) + rAB - rB).^3) - 2*betaAB_1.^2.*betaAB_2.^2. ...
        *rAB.^2.*(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1.*r.^2.*rAB. ...
        *cos(betaAB_2.*theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) + betaAB_1.*rA. ...
        *rAB.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r.*rAB.*rB). ...
        *sin(betaAB_2.*theta).^2./((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).^2. ...
        *(betaAB_1.*rAB.*cos(betaAB_2.*theta) + rAB - rB).^2) - 2*betaAB_1.^2.*betaAB_2.^2. ...
        *rAB.^2.*(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1.*r.^2.*rAB. ...
        *cos(betaAB_2.*theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) + betaAB_1.*rA. ...
        *rAB.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r.*rAB.*rB). ...
        *sin(betaAB_2.*theta).^2./((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).^3. ...
        *(betaAB_1.*rAB.*cos(betaAB_2.*theta) + rAB - rB)) - betaAB_1.*betaAB_2.^2.*rAB.*( ...
        -betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1.*r.^2.*rAB.*cos(betaAB_2. ...
        *theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) + betaAB_1.*rA.*rAB.*rB. ...
        *cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r.*rAB.*rB).*cos(betaAB_2. ...
        *theta)./((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).*(betaAB_1.*rAB. ...
        *cos(betaAB_2.*theta) + rAB - rB).^2) - betaAB_1.*betaAB_2.^2.*rAB.*(-betaAB_1.^2.*r. ...
        *rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) - 2 ...
        *betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2. ...
        *theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r.*rAB.*rB).*cos(betaAB_2.*theta). ...
        /((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).^2.*(betaAB_1.*rAB.*cos(betaAB_2. ...
        *theta) + rAB - rB)) - 2*betaAB_1.*betaAB_2.*rAB.*(2*betaAB_1.^2.*betaAB_2.*r.*rAB.^2. ...
        *sin(betaAB_2.*theta).*cos(betaAB_2.*theta) - betaAB_1.*betaAB_2.*r.^2.*rAB. ...
        *sin(betaAB_2.*theta) + 2*betaAB_1.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2.*theta) ...
        - betaAB_1.*betaAB_2.*rA.*rAB.*rB.*sin(betaAB_2.*theta)).*sin(betaAB_2.*theta). ...
        /((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).*(betaAB_1.*rAB.*cos(betaAB_2. ...
        *theta) + rAB - rB).^2) - 2*betaAB_1.*betaAB_2.*rAB.*(2*betaAB_1.^2.*betaAB_2.*r. ...
        *rAB.^2.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta) - betaAB_1.*betaAB_2.*r.^2.*rAB. ...
        *sin(betaAB_2.*theta) + 2*betaAB_1.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2.*theta) ...
        - betaAB_1.*betaAB_2.*rA.*rAB.*rB.*sin(betaAB_2.*theta)).*sin(betaAB_2.*theta). ...
        /((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).^2.*(betaAB_1.*rAB.*cos(betaAB_2. ...
        *theta) + rAB - rB)) - (-2*betaAB_1.^2.*betaAB_2.^2.*r.*rAB.^2.*sin(betaAB_2. ...
        *theta).^2 + 2*betaAB_1.^2.*betaAB_2.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1. ...
        *betaAB_2.^2.*r.^2.*rAB.*cos(betaAB_2.*theta) + 2*betaAB_1.*betaAB_2.^2.*r.*rAB.^2. ...
        *cos(betaAB_2.*theta) - betaAB_1.*betaAB_2.^2.*rA.*rAB.*rB.*cos(betaAB_2.*theta)). ...
        /((betaAB_1.*rAB.*cos(betaAB_2.*theta) - rA + rAB).*(betaAB_1.*rAB.*cos(betaAB_2. ...
        *theta) + rAB - rB)))./(-betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1. ...
        *r.^2.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) ...
        + betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) + r.*rA.*rAB - r.*rA.*rB - r.*rAB.^2 + r. ...
        *rAB.*rB))./r.^2);
end
