% Auto-generated by generate_code.py

% Global constants
global rA = 1.0;
global rAB = 0.75;
global rB = 0.5;
global betaAB_1 = 0.04;
global betaAB_2 = 8.0;
global alphaA = 2.0;
global alphaB = 1.0;
global wA = 1.0;
global wB = -1.0;

% Function RAB
function res = RAB(x, y)
    global rA;
    global rAB;
    global rB;
    global betaAB_1;
    global betaAB_2;
    global alphaA;
    global alphaB;
    global wA;
    global wB;
    r = sqrt(x.^2 + y.^2);
    theta = atan2(y, x);
    res = rAB.*(betaAB_1.*cos(betaAB_2.*theta) + 1);
end

% Function nAB
function res = nAB(x, y)
    global rA;
    global rAB;
    global rB;
    global betaAB_1;
    global betaAB_2;
    global alphaA;
    global alphaB;
    global wA;
    global wB;
    r = sqrt(x.^2 + y.^2);
    theta = atan2(y, x);
    res = zeros(2,1);
    res(1) = betaAB_1.*betaAB_2.*sin(theta).*sin(betaAB_2.*theta)./sqrt(betaAB_1.^2.*betaAB_2.^2. ...
        *sin(betaAB_2.*theta).^2 + betaAB_1.^2.*cos(betaAB_2.*theta).^2 + 2*betaAB_1.*cos(betaAB_2. ...
        *theta) + 1) + (-betaAB_1.*cos(betaAB_2.*theta) - 1).*cos(theta)./sqrt(betaAB_1.^2. ...
        *betaAB_2.^2.*sin(betaAB_2.*theta).^2 + betaAB_1.^2.*cos(betaAB_2.*theta).^2 + 2*betaAB_1. ...
        *cos(betaAB_2.*theta) + 1);
    res(2) = -betaAB_1.*betaAB_2.*sin(betaAB_2.*theta).*cos(theta)./sqrt(betaAB_1.^2.*betaAB_2.^2. ...
        *sin(betaAB_2.*theta).^2 + betaAB_1.^2.*cos(betaAB_2.*theta).^2 + 2*betaAB_1.*cos(betaAB_2. ...
        *theta) + 1) + (-betaAB_1.*cos(betaAB_2.*theta) - 1).*sin(theta)./sqrt(betaAB_1.^2. ...
        *betaAB_2.^2.*sin(betaAB_2.*theta).^2 + betaAB_1.^2.*cos(betaAB_2.*theta).^2 + 2*betaAB_1. ...
        *cos(betaAB_2.*theta) + 1);
end

% Function uA
function res = uA(x, y)
    global rA;
    global rAB;
    global rB;
    global betaAB_1;
    global betaAB_2;
    global alphaA;
    global alphaB;
    global wA;
    global wB;
    r = sqrt(x.^2 + y.^2);
    theta = atan2(y, x);
    res = zeros(2,1);
    res(1) = -r.*wA.*sin(theta) + (-betaAB_1.*betaAB_2.*r.^2.*rAB.*wA.*sin(betaAB_2.*theta) + betaAB_1. ...
        *betaAB_2.*r.*rA.*rAB.*wA.*sin(betaAB_2.*theta)).*cos(theta)./(betaAB_1.*rAB.*cos(betaAB_2. ...
        *theta) - rA + rAB);
    res(2) = r.*wA.*cos(theta) + (-betaAB_1.*betaAB_2.*r.^2.*rAB.*wA.*sin(betaAB_2.*theta) + betaAB_1. ...
        *betaAB_2.*r.*rA.*rAB.*wA.*sin(betaAB_2.*theta)).*sin(theta)./(betaAB_1.*rAB.*cos(betaAB_2. ...
        *theta) - rA + rAB);
end

% Function uB
function res = uB(x, y)
    global rA;
    global rAB;
    global rB;
    global betaAB_1;
    global betaAB_2;
    global alphaA;
    global alphaB;
    global wA;
    global wB;
    r = sqrt(x.^2 + y.^2);
    theta = atan2(y, x);
    res = zeros(2,1);
    res(1) = -r.*wB.*sin(theta) + (-betaAB_1.*betaAB_2.*r.^2.*rAB.*wB.*sin(betaAB_2.*theta) + betaAB_1. ...
        *betaAB_2.*r.*rAB.*rB.*wB.*sin(betaAB_2.*theta)).*cos(theta)./(betaAB_1.*rAB.*cos(betaAB_2. ...
        *theta) + rAB - rB);
    res(2) = r.*wB.*cos(theta) + (-betaAB_1.*betaAB_2.*r.^2.*rAB.*wB.*sin(betaAB_2.*theta) + betaAB_1. ...
        *betaAB_2.*r.*rAB.*rB.*wB.*sin(betaAB_2.*theta)).*sin(theta)./(betaAB_1.*rAB.*cos(betaAB_2. ...
        *theta) + rAB - rB);
end

% Function phiA
function res = phiA(x, y)
    global rA;
    global rAB;
    global rB;
    global betaAB_1;
    global betaAB_2;
    global alphaA;
    global alphaB;
    global wA;
    global wB;
    r = sqrt(x.^2 + y.^2);
    theta = atan2(y, x);
    aA = alphaB.*h.*rAB./(alphaA.*alphaB + alphaA.*h.*rAB.*log(rAB) - alphaA.*h.*rAB.*log(rB) + alphaB. ...
        *h.*rAB.*log(rA) - alphaB.*h.*rAB.*log(rAB));
    bA = (alphaA.*alphaB + alphaA.*h.*rAB.*log(rAB) - alphaA.*h.*rAB.*log(rB) - alphaB.*h.*rAB. ...
        *log(rAB))./(alphaA.*alphaB + alphaA.*h.*rAB.*log(rAB) - alphaA.*h.*rAB.*log(rB) + alphaB.*h. ...
        *rAB.*log(rA) - alphaB.*h.*rAB.*log(rAB));
    res = aA.*log((betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*r.^2.*rAB.*cos(betaAB_2. ...
        *theta) + 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rA.*rAB.*rB. ...
        *cos(betaAB_2.*theta) - r.*rA.*rAB + r.*rA.*rB + r.*rAB.^2 - r.*rAB.*rB)./(betaAB_1.^2. ...
        *rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*rA.*rAB.*cos(betaAB_2.*theta) + 2 ...
        *betaAB_1.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rAB.*rB.*cos(betaAB_2.*theta) - rA. ...
        *rAB + rA.*rB + rAB.^2 - rAB.*rB)) + bA;
end

% Function phiB
function res = phiB(x, y)
    global rA;
    global rAB;
    global rB;
    global betaAB_1;
    global betaAB_2;
    global alphaA;
    global alphaB;
    global wA;
    global wB;
    r = sqrt(x.^2 + y.^2);
    theta = atan2(y, x);
    aB = alphaA.*h.*rAB./(alphaA.*alphaB + alphaA.*h.*rAB.*log(rAB) - alphaA.*h.*rAB.*log(rB) + alphaB. ...
        *h.*rAB.*log(rA) - alphaB.*h.*rAB.*log(rAB));
    bB = -alphaA.*h.*rAB.*log(rB)./(alphaA.*alphaB + alphaA.*h.*rAB.*log(rAB) - alphaA.*h.*rAB. ...
        *log(rB) + alphaB.*h.*rAB.*log(rA) - alphaB.*h.*rAB.*log(rAB));
    res = aB.*log((betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*r.^2.*rAB.*cos(betaAB_2. ...
        *theta) + 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rA.*rAB.*rB. ...
        *cos(betaAB_2.*theta) - r.*rA.*rAB + r.*rA.*rB + r.*rAB.^2 - r.*rAB.*rB)./(betaAB_1.^2. ...
        *rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*rA.*rAB.*cos(betaAB_2.*theta) + 2 ...
        *betaAB_1.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rAB.*rB.*cos(betaAB_2.*theta) - rA. ...
        *rAB + rA.*rB + rAB.^2 - rAB.*rB)) + bB;
end

% Function fA
function res = fA(x, y)
    global rA;
    global rAB;
    global rB;
    global betaAB_1;
    global betaAB_2;
    global alphaA;
    global alphaB;
    global wA;
    global wB;
    r = sqrt(x.^2 + y.^2);
    theta = atan2(y, x);
    aA = alphaB.*h.*rAB./(alphaA.*alphaB + alphaA.*h.*rAB.*log(rAB) - alphaA.*h.*rAB.*log(rB) + alphaB. ...
        *h.*rAB.*log(rA) - alphaB.*h.*rAB.*log(rAB));
    bA = (alphaA.*alphaB + alphaA.*h.*rAB.*log(rAB) - alphaA.*h.*rAB.*log(rB) - alphaB.*h.*rAB. ...
        *log(rAB))./(alphaA.*alphaB + alphaA.*h.*rAB.*log(rAB) - alphaA.*h.*rAB.*log(rB) + alphaB.*h. ...
        *rAB.*log(rA) - alphaB.*h.*rAB.*log(rAB));
    res = -alphaA.*((-2*aA.*betaAB_1.*r.*rAB.*cos(betaAB_2.*theta)./(betaAB_1.^2.*r.*rAB.^2. ...
        *cos(betaAB_2.*theta).^2 - betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) + 2*betaAB_1.*r. ...
        *rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) - r.*rA. ...
        *rAB + r.*rA.*rB + r.*rAB.^2 - r.*rAB.*rB) + aA.*r.*(-betaAB_1.^2.*rAB.^2. ...
        *cos(betaAB_2.*theta).^2 + 2*betaAB_1.*r.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1. ...
        *rAB.^2.*cos(betaAB_2.*theta) + rA.*rAB - rA.*rB - rAB.^2 + rAB.*rB).*(betaAB_1.^2. ...
        *rAB.^2.*cos(betaAB_2.*theta).^2 - 2*betaAB_1.*r.*rAB.*cos(betaAB_2.*theta) + 2 ...
        *betaAB_1.*rAB.^2.*cos(betaAB_2.*theta) - rA.*rAB + rA.*rB + rAB.^2 - rAB.*rB). ...
        /(betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*r.^2.*rAB.*cos(betaAB_2. ...
        *theta) + 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rA.*rAB.*rB. ...
        *cos(betaAB_2.*theta) - r.*rA.*rAB + r.*rA.*rB + r.*rAB.^2 - r.*rAB.*rB).^2 + aA. ...
        *(betaAB_1.^2.*rAB.^2.*cos(betaAB_2.*theta).^2 - 2*betaAB_1.*r.*rAB.*cos(betaAB_2. ...
        *theta) + 2*betaAB_1.*rAB.^2.*cos(betaAB_2.*theta) - rA.*rAB + rA.*rB + rAB.^2 - rAB. ...
        *rB)./(betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*r.^2.*rAB. ...
        *cos(betaAB_2.*theta) + 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rA. ...
        *rAB.*rB.*cos(betaAB_2.*theta) - r.*rA.*rAB + r.*rA.*rB + r.*rAB.^2 - r.*rAB.*rB))./r ...
        + (aA.*((2*betaAB_1.^2.*betaAB_2.*rAB.^2.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta) ...
        - betaAB_1.*betaAB_2.*rA.*rAB.*sin(betaAB_2.*theta) + 2*betaAB_1.*betaAB_2.*rAB.^2. ...
        *sin(betaAB_2.*theta) - betaAB_1.*betaAB_2.*rAB.*rB.*sin(betaAB_2.*theta)). ...
        *(betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*r.^2.*rAB.*cos(betaAB_2. ...
        *theta) + 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rA.*rAB.*rB. ...
        *cos(betaAB_2.*theta) - r.*rA.*rAB + r.*rA.*rB + r.*rAB.^2 - r.*rAB.*rB)./(betaAB_1.^2. ...
        *rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*rA.*rAB.*cos(betaAB_2.*theta) + 2 ...
        *betaAB_1.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rAB.*rB.*cos(betaAB_2.*theta) - rA. ...
        *rAB + rA.*rB + rAB.^2 - rAB.*rB).^2 + (-2*betaAB_1.^2.*betaAB_2.*r.*rAB.^2. ...
        *sin(betaAB_2.*theta).*cos(betaAB_2.*theta) + betaAB_1.*betaAB_2.*r.^2.*rAB. ...
        *sin(betaAB_2.*theta) - 2*betaAB_1.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2.*theta) ...
        + betaAB_1.*betaAB_2.*rA.*rAB.*rB.*sin(betaAB_2.*theta))./(betaAB_1.^2.*rAB.^2. ...
        *cos(betaAB_2.*theta).^2 - betaAB_1.*rA.*rAB.*cos(betaAB_2.*theta) + 2*betaAB_1. ...
        *rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rAB.*rB.*cos(betaAB_2.*theta) - rA.*rAB + rA. ...
        *rB + rAB.^2 - rAB.*rB)).*(-2*betaAB_1.^2.*betaAB_2.*rAB.^2.*sin(betaAB_2.*theta). ...
        *cos(betaAB_2.*theta) + betaAB_1.*betaAB_2.*rA.*rAB.*sin(betaAB_2.*theta) - 2*betaAB_1. ...
        *betaAB_2.*rAB.^2.*sin(betaAB_2.*theta) + betaAB_1.*betaAB_2.*rAB.*rB.*sin(betaAB_2. ...
        *theta))./(betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*r.^2.*rAB. ...
        *cos(betaAB_2.*theta) + 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rA. ...
        *rAB.*rB.*cos(betaAB_2.*theta) - r.*rA.*rAB + r.*rA.*rB + r.*rAB.^2 - r.*rAB.*rB) + aA. ...
        *((2*betaAB_1.^2.*betaAB_2.*rAB.^2.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta) ...
        - betaAB_1.*betaAB_2.*rA.*rAB.*sin(betaAB_2.*theta) + 2*betaAB_1.*betaAB_2.*rAB.^2. ...
        *sin(betaAB_2.*theta) - betaAB_1.*betaAB_2.*rAB.*rB.*sin(betaAB_2.*theta)). ...
        *(betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*r.^2.*rAB.*cos(betaAB_2. ...
        *theta) + 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rA.*rAB.*rB. ...
        *cos(betaAB_2.*theta) - r.*rA.*rAB + r.*rA.*rB + r.*rAB.^2 - r.*rAB.*rB)./(betaAB_1.^2. ...
        *rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*rA.*rAB.*cos(betaAB_2.*theta) + 2 ...
        *betaAB_1.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rAB.*rB.*cos(betaAB_2.*theta) - rA. ...
        *rAB + rA.*rB + rAB.^2 - rAB.*rB).^2 + (-2*betaAB_1.^2.*betaAB_2.*r.*rAB.^2. ...
        *sin(betaAB_2.*theta).*cos(betaAB_2.*theta) + betaAB_1.*betaAB_2.*r.^2.*rAB. ...
        *sin(betaAB_2.*theta) - 2*betaAB_1.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2.*theta) ...
        + betaAB_1.*betaAB_2.*rA.*rAB.*rB.*sin(betaAB_2.*theta))./(betaAB_1.^2.*rAB.^2. ...
        *cos(betaAB_2.*theta).^2 - betaAB_1.*rA.*rAB.*cos(betaAB_2.*theta) + 2*betaAB_1. ...
        *rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rAB.*rB.*cos(betaAB_2.*theta) - rA.*rAB + rA. ...
        *rB + rAB.^2 - rAB.*rB)).*(2*betaAB_1.^2.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2.*theta). ...
        *cos(betaAB_2.*theta) - betaAB_1.*betaAB_2.*r.^2.*rAB.*sin(betaAB_2.*theta) + 2 ...
        *betaAB_1.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2.*theta) - betaAB_1.*betaAB_2.*rA.*rAB.*rB. ...
        *sin(betaAB_2.*theta)).*(betaAB_1.^2.*rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*rA. ...
        *rAB.*cos(betaAB_2.*theta) + 2*betaAB_1.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rAB. ...
        *rB.*cos(betaAB_2.*theta) - rA.*rAB + rA.*rB + rAB.^2 - rAB.*rB)./(betaAB_1.^2.*r. ...
        *rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) + 2 ...
        *betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2. ...
        *theta) - r.*rA.*rAB + r.*rA.*rB + r.*rAB.^2 - r.*rAB.*rB).^2 + aA.*((2*betaAB_1.^2. ...
        *betaAB_2.*rAB.^2.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta) - betaAB_1.*betaAB_2.*rA. ...
        *rAB.*sin(betaAB_2.*theta) + 2*betaAB_1.*betaAB_2.*rAB.^2.*sin(betaAB_2.*theta) ...
        - betaAB_1.*betaAB_2.*rAB.*rB.*sin(betaAB_2.*theta)).*(4*betaAB_1.^2.*betaAB_2.*rAB.^2. ...
        *sin(betaAB_2.*theta).*cos(betaAB_2.*theta) - 2*betaAB_1.*betaAB_2.*rA.*rAB. ...
        *sin(betaAB_2.*theta) + 4*betaAB_1.*betaAB_2.*rAB.^2.*sin(betaAB_2.*theta) - 2 ...
        *betaAB_1.*betaAB_2.*rAB.*rB.*sin(betaAB_2.*theta)).*(betaAB_1.^2.*r.*rAB.^2. ...
        *cos(betaAB_2.*theta).^2 - betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) + 2*betaAB_1.*r. ...
        *rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) - r.*rA. ...
        *rAB + r.*rA.*rB + r.*rAB.^2 - r.*rAB.*rB)./(betaAB_1.^2.*rAB.^2.*cos(betaAB_2. ...
        *theta).^2 - betaAB_1.*rA.*rAB.*cos(betaAB_2.*theta) + 2*betaAB_1.*rAB.^2. ...
        *cos(betaAB_2.*theta) - betaAB_1.*rAB.*rB.*cos(betaAB_2.*theta) - rA.*rAB + rA.*rB ...
        + rAB.^2 - rAB.*rB).^3 + 2*(2*betaAB_1.^2.*betaAB_2.*rAB.^2.*sin(betaAB_2.*theta). ...
        *cos(betaAB_2.*theta) - betaAB_1.*betaAB_2.*rA.*rAB.*sin(betaAB_2.*theta) + 2*betaAB_1. ...
        *betaAB_2.*rAB.^2.*sin(betaAB_2.*theta) - betaAB_1.*betaAB_2.*rAB.*rB.*sin(betaAB_2. ...
        *theta)).*(-2*betaAB_1.^2.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2.*theta).*cos(betaAB_2. ...
        *theta) + betaAB_1.*betaAB_2.*r.^2.*rAB.*sin(betaAB_2.*theta) - 2*betaAB_1.*betaAB_2. ...
        *r.*rAB.^2.*sin(betaAB_2.*theta) + betaAB_1.*betaAB_2.*rA.*rAB.*rB.*sin(betaAB_2. ...
        *theta))./(betaAB_1.^2.*rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*rA.*rAB. ...
        *cos(betaAB_2.*theta) + 2*betaAB_1.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rAB.*rB. ...
        *cos(betaAB_2.*theta) - rA.*rAB + rA.*rB + rAB.^2 - rAB.*rB).^2 + (-2*betaAB_1.^2. ...
        *betaAB_2.^2.*rAB.^2.*sin(betaAB_2.*theta).^2 + 2*betaAB_1.^2.*betaAB_2.^2.*rAB.^2. ...
        *cos(betaAB_2.*theta).^2 - betaAB_1.*betaAB_2.^2.*rA.*rAB.*cos(betaAB_2.*theta) + 2 ...
        *betaAB_1.*betaAB_2.^2.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*betaAB_2.^2.*rAB.*rB. ...
        *cos(betaAB_2.*theta)).*(betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1. ...
        *r.^2.*rAB.*cos(betaAB_2.*theta) + 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) ...
        - betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) - r.*rA.*rAB + r.*rA.*rB + r.*rAB.^2 - r. ...
        *rAB.*rB)./(betaAB_1.^2.*rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*rA.*rAB. ...
        *cos(betaAB_2.*theta) + 2*betaAB_1.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rAB.*rB. ...
        *cos(betaAB_2.*theta) - rA.*rAB + rA.*rB + rAB.^2 - rAB.*rB).^2 + (2*betaAB_1.^2. ...
        *betaAB_2.^2.*r.*rAB.^2.*sin(betaAB_2.*theta).^2 - 2*betaAB_1.^2.*betaAB_2.^2.*r. ...
        *rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1.*betaAB_2.^2.*r.^2.*rAB.*cos(betaAB_2. ...
        *theta) - 2*betaAB_1.*betaAB_2.^2.*r.*rAB.^2.*cos(betaAB_2.*theta) + betaAB_1. ...
        *betaAB_2.^2.*rA.*rAB.*rB.*cos(betaAB_2.*theta))./(betaAB_1.^2.*rAB.^2.*cos(betaAB_2. ...
        *theta).^2 - betaAB_1.*rA.*rAB.*cos(betaAB_2.*theta) + 2*betaAB_1.*rAB.^2. ...
        *cos(betaAB_2.*theta) - betaAB_1.*rAB.*rB.*cos(betaAB_2.*theta) - rA.*rAB + rA.*rB ...
        + rAB.^2 - rAB.*rB)).*(betaAB_1.^2.*rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*rA. ...
        *rAB.*cos(betaAB_2.*theta) + 2*betaAB_1.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rAB. ...
        *rB.*cos(betaAB_2.*theta) - rA.*rAB + rA.*rB + rAB.^2 - rAB.*rB)./(betaAB_1.^2.*r. ...
        *rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) + 2 ...
        *betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2. ...
        *theta) - r.*rA.*rAB + r.*rA.*rB + r.*rAB.^2 - r.*rAB.*rB))./r.^2) + (aA.*betaAB_1.^4. ...
        *betaAB_2.*r.^2.*rAB.^4.*wA.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta).^3 - aA. ...
        *betaAB_1.^4.*betaAB_2.*r.*rA.*rAB.^4.*wA.*sin(betaAB_2.*theta).*cos(betaAB_2. ...
        *theta).^3 - 2*aA.*betaAB_1.^3.*betaAB_2.*r.^3.*rAB.^3.*wA.*sin(betaAB_2.*theta). ...
        *cos(betaAB_2.*theta).^2 + 2*aA.*betaAB_1.^3.*betaAB_2.*r.^2.*rA.*rAB.^3.*wA. ...
        *sin(betaAB_2.*theta).*cos(betaAB_2.*theta).^2 + 3*aA.*betaAB_1.^3.*betaAB_2.*r.^2. ...
        *rAB.^4.*wA.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta).^2 - aA.*betaAB_1.^3.*betaAB_2. ...
        *r.^2.*rAB.^3.*rB.*wA.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta).^2 + aA.*betaAB_1.^3. ...
        *betaAB_2.*r.^2.*rAB.^3.*wA.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta).^2 - 3*aA. ...
        *betaAB_1.^3.*betaAB_2.*r.*rA.*rAB.^4.*wA.*sin(betaAB_2.*theta).*cos(betaAB_2. ...
        *theta).^2 + aA.*betaAB_1.^3.*betaAB_2.*r.*rA.*rAB.^3.*rB.*wA.*sin(betaAB_2.*theta). ...
        *cos(betaAB_2.*theta).^2 - aA.*betaAB_1.^3.*betaAB_2.*r.*rA.*rAB.^3.*wA.*sin(betaAB_2. ...
        *theta).*cos(betaAB_2.*theta).^2 - aA.*betaAB_1.^3.*betaAB_2.*r.*rAB.^3.*rB.*wA. ...
        *sin(betaAB_2.*theta).*cos(betaAB_2.*theta).^2 + aA.*betaAB_1.^3.*betaAB_2.*rA.*rAB.^3. ...
        *rB.*wA.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta).^2 - 2*aA.*betaAB_1.^2.*betaAB_2. ...
        *r.^3.*rAB.^3.*wA.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta) + 2*aA.*betaAB_1.^2. ...
        *betaAB_2.*r.^3.*rAB.^2.*rB.*wA.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta) + aA. ...
        *betaAB_1.^2.*betaAB_2.*r.^2.*rA.*rAB.^3.*wA.*sin(betaAB_2.*theta).*cos(betaAB_2. ...
        *theta) - aA.*betaAB_1.^2.*betaAB_2.*r.^2.*rA.*rAB.^2.*rB.*wA.*sin(betaAB_2.*theta). ...
        *cos(betaAB_2.*theta) + 3*aA.*betaAB_1.^2.*betaAB_2.*r.^2.*rAB.^4.*wA.*sin(betaAB_2. ...
        *theta).*cos(betaAB_2.*theta) - 3*aA.*betaAB_1.^2.*betaAB_2.*r.^2.*rAB.^3.*rB.*wA. ...
        *sin(betaAB_2.*theta).*cos(betaAB_2.*theta) + aA.*betaAB_1.^2.*betaAB_2.*r.*rA.^2. ...
        *rAB.^3.*wA.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta) - aA.*betaAB_1.^2.*betaAB_2.*r. ...
        *rA.^2.*rAB.^2.*rB.*wA.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta) - 3*aA.*betaAB_1.^2. ...
        *betaAB_2.*r.*rA.*rAB.^4.*wA.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta) + 3*aA. ...
        *betaAB_1.^2.*betaAB_2.*r.*rA.*rAB.^3.*rB.*wA.*sin(betaAB_2.*theta).*cos(betaAB_2. ...
        *theta) - aA.*betaAB_1.*betaAB_2.*r.^2.*rA.*rAB.^3.*wA.*sin(betaAB_2.*theta) + 2*aA. ...
        *betaAB_1.*betaAB_2.*r.^2.*rA.*rAB.^2.*rB.*wA.*sin(betaAB_2.*theta) + aA.*betaAB_1. ...
        *betaAB_2.*r.^2.*rA.*rAB.^2.*wA.*sin(betaAB_2.*theta) - aA.*betaAB_1.*betaAB_2.*r.^2. ...
        *rA.*rAB.*rB.^2.*wA.*sin(betaAB_2.*theta) - aA.*betaAB_1.*betaAB_2.*r.^2.*rA.*rAB.*rB. ...
        *wA.*sin(betaAB_2.*theta) + aA.*betaAB_1.*betaAB_2.*r.^2.*rAB.^4.*wA.*sin(betaAB_2. ...
        *theta) - 2*aA.*betaAB_1.*betaAB_2.*r.^2.*rAB.^3.*rB.*wA.*sin(betaAB_2.*theta) - aA. ...
        *betaAB_1.*betaAB_2.*r.^2.*rAB.^3.*wA.*sin(betaAB_2.*theta) + aA.*betaAB_1.*betaAB_2. ...
        *r.^2.*rAB.^2.*rB.^2.*wA.*sin(betaAB_2.*theta) + aA.*betaAB_1.*betaAB_2.*r.^2.*rAB.^2. ...
        *rB.*wA.*sin(betaAB_2.*theta) + aA.*betaAB_1.*betaAB_2.*r.*rA.^2.*rAB.^3.*wA. ...
        *sin(betaAB_2.*theta) - 2*aA.*betaAB_1.*betaAB_2.*r.*rA.^2.*rAB.^2.*rB.*wA. ...
        *sin(betaAB_2.*theta) - aA.*betaAB_1.*betaAB_2.*r.*rA.^2.*rAB.^2.*wA.*sin(betaAB_2. ...
        *theta) + aA.*betaAB_1.*betaAB_2.*r.*rA.^2.*rAB.*rB.^2.*wA.*sin(betaAB_2.*theta) + aA. ...
        *betaAB_1.*betaAB_2.*r.*rA.^2.*rAB.*rB.*wA.*sin(betaAB_2.*theta) - aA.*betaAB_1. ...
        *betaAB_2.*r.*rA.*rAB.^4.*wA.*sin(betaAB_2.*theta) + 2*aA.*betaAB_1.*betaAB_2.*r.*rA. ...
        *rAB.^3.*rB.*wA.*sin(betaAB_2.*theta) + aA.*betaAB_1.*betaAB_2.*r.*rA.*rAB.^3.*wA. ...
        *sin(betaAB_2.*theta) - aA.*betaAB_1.*betaAB_2.*r.*rA.*rAB.^2.*rB.^2.*wA.*sin(betaAB_2. ...
        *theta) - 2*aA.*betaAB_1.*betaAB_2.*r.*rA.*rAB.^2.*rB.*wA.*sin(betaAB_2.*theta) + aA. ...
        *betaAB_1.*betaAB_2.*r.*rA.*rAB.*rB.^2.*wA.*sin(betaAB_2.*theta) + aA.*betaAB_1. ...
        *betaAB_2.*r.*rAB.^3.*rB.*wA.*sin(betaAB_2.*theta) - aA.*betaAB_1.*betaAB_2.*r.*rAB.^2. ...
        *rB.^2.*wA.*sin(betaAB_2.*theta) + aA.*betaAB_1.*betaAB_2.*rA.^2.*rAB.^2.*rB.*wA. ...
        *sin(betaAB_2.*theta) - aA.*betaAB_1.*betaAB_2.*rA.^2.*rAB.*rB.^2.*wA.*sin(betaAB_2. ...
        *theta) - aA.*betaAB_1.*betaAB_2.*rA.*rAB.^3.*rB.*wA.*sin(betaAB_2.*theta) + aA. ...
        *betaAB_1.*betaAB_2.*rA.*rAB.^2.*rB.^2.*wA.*sin(betaAB_2.*theta))./(-betaAB_1.^4.*r. ...
        *rAB.^4.*cos(betaAB_2.*theta).^4 + betaAB_1.^3.*r.^2.*rAB.^3.*cos(betaAB_2.*theta).^3 ...
        + betaAB_1.^3.*r.*rA.*rAB.^3.*cos(betaAB_2.*theta).^3 - 4*betaAB_1.^3.*r.*rAB.^4. ...
        *cos(betaAB_2.*theta).^3 + betaAB_1.^3.*r.*rAB.^3.*rB.*cos(betaAB_2.*theta).^3 ...
        + betaAB_1.^3.*rA.*rAB.^3.*rB.*cos(betaAB_2.*theta).^3 - betaAB_1.^2.*r.^2.*rA.*rAB.^2. ...
        *cos(betaAB_2.*theta).^2 + 2*betaAB_1.^2.*r.^2.*rAB.^3.*cos(betaAB_2.*theta).^2 ...
        - betaAB_1.^2.*r.^2.*rAB.^2.*rB.*cos(betaAB_2.*theta).^2 + 4*betaAB_1.^2.*r.*rA. ...
        *rAB.^3.*cos(betaAB_2.*theta).^2 - 2*betaAB_1.^2.*r.*rA.*rAB.^2.*rB.*cos(betaAB_2. ...
        *theta).^2 - 6*betaAB_1.^2.*r.*rAB.^4.*cos(betaAB_2.*theta).^2 + 4*betaAB_1.^2.*r. ...
        *rAB.^3.*rB.*cos(betaAB_2.*theta).^2 - betaAB_1.^2.*rA.^2.*rAB.^2.*rB.*cos(betaAB_2. ...
        *theta).^2 + 2*betaAB_1.^2.*rA.*rAB.^3.*rB.*cos(betaAB_2.*theta).^2 - betaAB_1.^2.*rA. ...
        *rAB.^2.*rB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*r.^2.*rA.*rAB.^2.*cos(betaAB_2. ...
        *theta) + betaAB_1.*r.^2.*rA.*rAB.*rB.*cos(betaAB_2.*theta) + betaAB_1.*r.^2.*rAB.^3. ...
        *cos(betaAB_2.*theta) - betaAB_1.*r.^2.*rAB.^2.*rB.*cos(betaAB_2.*theta) - betaAB_1.*r. ...
        *rA.^2.*rAB.^2.*cos(betaAB_2.*theta) + betaAB_1.*r.*rA.^2.*rAB.*rB.*cos(betaAB_2. ...
        *theta) + 5*betaAB_1.*r.*rA.*rAB.^3.*cos(betaAB_2.*theta) - 6*betaAB_1.*r.*rA.*rAB.^2. ...
        *rB.*cos(betaAB_2.*theta) + betaAB_1.*r.*rA.*rAB.*rB.^2.*cos(betaAB_2.*theta) - 4 ...
        *betaAB_1.*r.*rAB.^4.*cos(betaAB_2.*theta) + 5*betaAB_1.*r.*rAB.^3.*rB.*cos(betaAB_2. ...
        *theta) - betaAB_1.*r.*rAB.^2.*rB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rA.^2.*rAB.^2. ...
        *rB.*cos(betaAB_2.*theta) + betaAB_1.*rA.^2.*rAB.*rB.^2.*cos(betaAB_2.*theta) ...
        + betaAB_1.*rA.*rAB.^3.*rB.*cos(betaAB_2.*theta) - betaAB_1.*rA.*rAB.^2.*rB.^2. ...
        *cos(betaAB_2.*theta) - r.*rA.^2.*rAB.^2 + 2*r.*rA.^2.*rAB.*rB - r.*rA.^2.*rB.^2 + 2*r. ...
        *rA.*rAB.^3 - 4*r.*rA.*rAB.^2.*rB + 2*r.*rA.*rAB.*rB.^2 - r.*rAB.^4 + 2*r.*rAB.^3.*rB ...
        - r.*rAB.^2.*rB.^2);
end

% Function fB
function res = fB(x, y)
    global rA;
    global rAB;
    global rB;
    global betaAB_1;
    global betaAB_2;
    global alphaA;
    global alphaB;
    global wA;
    global wB;
    r = sqrt(x.^2 + y.^2);
    theta = atan2(y, x);
    aB = alphaA.*h.*rAB./(alphaA.*alphaB + alphaA.*h.*rAB.*log(rAB) - alphaA.*h.*rAB.*log(rB) + alphaB. ...
        *h.*rAB.*log(rA) - alphaB.*h.*rAB.*log(rAB));
    bB = -alphaA.*h.*rAB.*log(rB)./(alphaA.*alphaB + alphaA.*h.*rAB.*log(rAB) - alphaA.*h.*rAB. ...
        *log(rB) + alphaB.*h.*rAB.*log(rA) - alphaB.*h.*rAB.*log(rAB));
    res = -alphaB.*((-2*aB.*betaAB_1.*r.*rAB.*cos(betaAB_2.*theta)./(betaAB_1.^2.*r.*rAB.^2. ...
        *cos(betaAB_2.*theta).^2 - betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) + 2*betaAB_1.*r. ...
        *rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) - r.*rA. ...
        *rAB + r.*rA.*rB + r.*rAB.^2 - r.*rAB.*rB) + aB.*r.*(-betaAB_1.^2.*rAB.^2. ...
        *cos(betaAB_2.*theta).^2 + 2*betaAB_1.*r.*rAB.*cos(betaAB_2.*theta) - 2*betaAB_1. ...
        *rAB.^2.*cos(betaAB_2.*theta) + rA.*rAB - rA.*rB - rAB.^2 + rAB.*rB).*(betaAB_1.^2. ...
        *rAB.^2.*cos(betaAB_2.*theta).^2 - 2*betaAB_1.*r.*rAB.*cos(betaAB_2.*theta) + 2 ...
        *betaAB_1.*rAB.^2.*cos(betaAB_2.*theta) - rA.*rAB + rA.*rB + rAB.^2 - rAB.*rB). ...
        /(betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*r.^2.*rAB.*cos(betaAB_2. ...
        *theta) + 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rA.*rAB.*rB. ...
        *cos(betaAB_2.*theta) - r.*rA.*rAB + r.*rA.*rB + r.*rAB.^2 - r.*rAB.*rB).^2 + aB. ...
        *(betaAB_1.^2.*rAB.^2.*cos(betaAB_2.*theta).^2 - 2*betaAB_1.*r.*rAB.*cos(betaAB_2. ...
        *theta) + 2*betaAB_1.*rAB.^2.*cos(betaAB_2.*theta) - rA.*rAB + rA.*rB + rAB.^2 - rAB. ...
        *rB)./(betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*r.^2.*rAB. ...
        *cos(betaAB_2.*theta) + 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rA. ...
        *rAB.*rB.*cos(betaAB_2.*theta) - r.*rA.*rAB + r.*rA.*rB + r.*rAB.^2 - r.*rAB.*rB))./r ...
        + (aB.*((2*betaAB_1.^2.*betaAB_2.*rAB.^2.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta) ...
        - betaAB_1.*betaAB_2.*rA.*rAB.*sin(betaAB_2.*theta) + 2*betaAB_1.*betaAB_2.*rAB.^2. ...
        *sin(betaAB_2.*theta) - betaAB_1.*betaAB_2.*rAB.*rB.*sin(betaAB_2.*theta)). ...
        *(betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*r.^2.*rAB.*cos(betaAB_2. ...
        *theta) + 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rA.*rAB.*rB. ...
        *cos(betaAB_2.*theta) - r.*rA.*rAB + r.*rA.*rB + r.*rAB.^2 - r.*rAB.*rB)./(betaAB_1.^2. ...
        *rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*rA.*rAB.*cos(betaAB_2.*theta) + 2 ...
        *betaAB_1.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rAB.*rB.*cos(betaAB_2.*theta) - rA. ...
        *rAB + rA.*rB + rAB.^2 - rAB.*rB).^2 + (-2*betaAB_1.^2.*betaAB_2.*r.*rAB.^2. ...
        *sin(betaAB_2.*theta).*cos(betaAB_2.*theta) + betaAB_1.*betaAB_2.*r.^2.*rAB. ...
        *sin(betaAB_2.*theta) - 2*betaAB_1.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2.*theta) ...
        + betaAB_1.*betaAB_2.*rA.*rAB.*rB.*sin(betaAB_2.*theta))./(betaAB_1.^2.*rAB.^2. ...
        *cos(betaAB_2.*theta).^2 - betaAB_1.*rA.*rAB.*cos(betaAB_2.*theta) + 2*betaAB_1. ...
        *rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rAB.*rB.*cos(betaAB_2.*theta) - rA.*rAB + rA. ...
        *rB + rAB.^2 - rAB.*rB)).*(-2*betaAB_1.^2.*betaAB_2.*rAB.^2.*sin(betaAB_2.*theta). ...
        *cos(betaAB_2.*theta) + betaAB_1.*betaAB_2.*rA.*rAB.*sin(betaAB_2.*theta) - 2*betaAB_1. ...
        *betaAB_2.*rAB.^2.*sin(betaAB_2.*theta) + betaAB_1.*betaAB_2.*rAB.*rB.*sin(betaAB_2. ...
        *theta))./(betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*r.^2.*rAB. ...
        *cos(betaAB_2.*theta) + 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rA. ...
        *rAB.*rB.*cos(betaAB_2.*theta) - r.*rA.*rAB + r.*rA.*rB + r.*rAB.^2 - r.*rAB.*rB) + aB. ...
        *((2*betaAB_1.^2.*betaAB_2.*rAB.^2.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta) ...
        - betaAB_1.*betaAB_2.*rA.*rAB.*sin(betaAB_2.*theta) + 2*betaAB_1.*betaAB_2.*rAB.^2. ...
        *sin(betaAB_2.*theta) - betaAB_1.*betaAB_2.*rAB.*rB.*sin(betaAB_2.*theta)). ...
        *(betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*r.^2.*rAB.*cos(betaAB_2. ...
        *theta) + 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rA.*rAB.*rB. ...
        *cos(betaAB_2.*theta) - r.*rA.*rAB + r.*rA.*rB + r.*rAB.^2 - r.*rAB.*rB)./(betaAB_1.^2. ...
        *rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*rA.*rAB.*cos(betaAB_2.*theta) + 2 ...
        *betaAB_1.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rAB.*rB.*cos(betaAB_2.*theta) - rA. ...
        *rAB + rA.*rB + rAB.^2 - rAB.*rB).^2 + (-2*betaAB_1.^2.*betaAB_2.*r.*rAB.^2. ...
        *sin(betaAB_2.*theta).*cos(betaAB_2.*theta) + betaAB_1.*betaAB_2.*r.^2.*rAB. ...
        *sin(betaAB_2.*theta) - 2*betaAB_1.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2.*theta) ...
        + betaAB_1.*betaAB_2.*rA.*rAB.*rB.*sin(betaAB_2.*theta))./(betaAB_1.^2.*rAB.^2. ...
        *cos(betaAB_2.*theta).^2 - betaAB_1.*rA.*rAB.*cos(betaAB_2.*theta) + 2*betaAB_1. ...
        *rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rAB.*rB.*cos(betaAB_2.*theta) - rA.*rAB + rA. ...
        *rB + rAB.^2 - rAB.*rB)).*(2*betaAB_1.^2.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2.*theta). ...
        *cos(betaAB_2.*theta) - betaAB_1.*betaAB_2.*r.^2.*rAB.*sin(betaAB_2.*theta) + 2 ...
        *betaAB_1.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2.*theta) - betaAB_1.*betaAB_2.*rA.*rAB.*rB. ...
        *sin(betaAB_2.*theta)).*(betaAB_1.^2.*rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*rA. ...
        *rAB.*cos(betaAB_2.*theta) + 2*betaAB_1.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rAB. ...
        *rB.*cos(betaAB_2.*theta) - rA.*rAB + rA.*rB + rAB.^2 - rAB.*rB)./(betaAB_1.^2.*r. ...
        *rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) + 2 ...
        *betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2. ...
        *theta) - r.*rA.*rAB + r.*rA.*rB + r.*rAB.^2 - r.*rAB.*rB).^2 + aB.*((2*betaAB_1.^2. ...
        *betaAB_2.*rAB.^2.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta) - betaAB_1.*betaAB_2.*rA. ...
        *rAB.*sin(betaAB_2.*theta) + 2*betaAB_1.*betaAB_2.*rAB.^2.*sin(betaAB_2.*theta) ...
        - betaAB_1.*betaAB_2.*rAB.*rB.*sin(betaAB_2.*theta)).*(4*betaAB_1.^2.*betaAB_2.*rAB.^2. ...
        *sin(betaAB_2.*theta).*cos(betaAB_2.*theta) - 2*betaAB_1.*betaAB_2.*rA.*rAB. ...
        *sin(betaAB_2.*theta) + 4*betaAB_1.*betaAB_2.*rAB.^2.*sin(betaAB_2.*theta) - 2 ...
        *betaAB_1.*betaAB_2.*rAB.*rB.*sin(betaAB_2.*theta)).*(betaAB_1.^2.*r.*rAB.^2. ...
        *cos(betaAB_2.*theta).^2 - betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) + 2*betaAB_1.*r. ...
        *rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) - r.*rA. ...
        *rAB + r.*rA.*rB + r.*rAB.^2 - r.*rAB.*rB)./(betaAB_1.^2.*rAB.^2.*cos(betaAB_2. ...
        *theta).^2 - betaAB_1.*rA.*rAB.*cos(betaAB_2.*theta) + 2*betaAB_1.*rAB.^2. ...
        *cos(betaAB_2.*theta) - betaAB_1.*rAB.*rB.*cos(betaAB_2.*theta) - rA.*rAB + rA.*rB ...
        + rAB.^2 - rAB.*rB).^3 + 2*(2*betaAB_1.^2.*betaAB_2.*rAB.^2.*sin(betaAB_2.*theta). ...
        *cos(betaAB_2.*theta) - betaAB_1.*betaAB_2.*rA.*rAB.*sin(betaAB_2.*theta) + 2*betaAB_1. ...
        *betaAB_2.*rAB.^2.*sin(betaAB_2.*theta) - betaAB_1.*betaAB_2.*rAB.*rB.*sin(betaAB_2. ...
        *theta)).*(-2*betaAB_1.^2.*betaAB_2.*r.*rAB.^2.*sin(betaAB_2.*theta).*cos(betaAB_2. ...
        *theta) + betaAB_1.*betaAB_2.*r.^2.*rAB.*sin(betaAB_2.*theta) - 2*betaAB_1.*betaAB_2. ...
        *r.*rAB.^2.*sin(betaAB_2.*theta) + betaAB_1.*betaAB_2.*rA.*rAB.*rB.*sin(betaAB_2. ...
        *theta))./(betaAB_1.^2.*rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*rA.*rAB. ...
        *cos(betaAB_2.*theta) + 2*betaAB_1.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rAB.*rB. ...
        *cos(betaAB_2.*theta) - rA.*rAB + rA.*rB + rAB.^2 - rAB.*rB).^2 + (-2*betaAB_1.^2. ...
        *betaAB_2.^2.*rAB.^2.*sin(betaAB_2.*theta).^2 + 2*betaAB_1.^2.*betaAB_2.^2.*rAB.^2. ...
        *cos(betaAB_2.*theta).^2 - betaAB_1.*betaAB_2.^2.*rA.*rAB.*cos(betaAB_2.*theta) + 2 ...
        *betaAB_1.*betaAB_2.^2.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*betaAB_2.^2.*rAB.*rB. ...
        *cos(betaAB_2.*theta)).*(betaAB_1.^2.*r.*rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1. ...
        *r.^2.*rAB.*cos(betaAB_2.*theta) + 2*betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) ...
        - betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2.*theta) - r.*rA.*rAB + r.*rA.*rB + r.*rAB.^2 - r. ...
        *rAB.*rB)./(betaAB_1.^2.*rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*rA.*rAB. ...
        *cos(betaAB_2.*theta) + 2*betaAB_1.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rAB.*rB. ...
        *cos(betaAB_2.*theta) - rA.*rAB + rA.*rB + rAB.^2 - rAB.*rB).^2 + (2*betaAB_1.^2. ...
        *betaAB_2.^2.*r.*rAB.^2.*sin(betaAB_2.*theta).^2 - 2*betaAB_1.^2.*betaAB_2.^2.*r. ...
        *rAB.^2.*cos(betaAB_2.*theta).^2 + betaAB_1.*betaAB_2.^2.*r.^2.*rAB.*cos(betaAB_2. ...
        *theta) - 2*betaAB_1.*betaAB_2.^2.*r.*rAB.^2.*cos(betaAB_2.*theta) + betaAB_1. ...
        *betaAB_2.^2.*rA.*rAB.*rB.*cos(betaAB_2.*theta))./(betaAB_1.^2.*rAB.^2.*cos(betaAB_2. ...
        *theta).^2 - betaAB_1.*rA.*rAB.*cos(betaAB_2.*theta) + 2*betaAB_1.*rAB.^2. ...
        *cos(betaAB_2.*theta) - betaAB_1.*rAB.*rB.*cos(betaAB_2.*theta) - rA.*rAB + rA.*rB ...
        + rAB.^2 - rAB.*rB)).*(betaAB_1.^2.*rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*rA. ...
        *rAB.*cos(betaAB_2.*theta) + 2*betaAB_1.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rAB. ...
        *rB.*cos(betaAB_2.*theta) - rA.*rAB + rA.*rB + rAB.^2 - rAB.*rB)./(betaAB_1.^2.*r. ...
        *rAB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*r.^2.*rAB.*cos(betaAB_2.*theta) + 2 ...
        *betaAB_1.*r.*rAB.^2.*cos(betaAB_2.*theta) - betaAB_1.*rA.*rAB.*rB.*cos(betaAB_2. ...
        *theta) - r.*rA.*rAB + r.*rA.*rB + r.*rAB.^2 - r.*rAB.*rB))./r.^2) + (aB.*betaAB_1.^4. ...
        *betaAB_2.*r.^2.*rAB.^4.*wB.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta).^3 - aB. ...
        *betaAB_1.^4.*betaAB_2.*r.*rAB.^4.*rB.*wB.*sin(betaAB_2.*theta).*cos(betaAB_2. ...
        *theta).^3 - 2*aB.*betaAB_1.^3.*betaAB_2.*r.^3.*rAB.^3.*wB.*sin(betaAB_2.*theta). ...
        *cos(betaAB_2.*theta).^2 - aB.*betaAB_1.^3.*betaAB_2.*r.^2.*rA.*rAB.^3.*wB. ...
        *sin(betaAB_2.*theta).*cos(betaAB_2.*theta).^2 + 3*aB.*betaAB_1.^3.*betaAB_2.*r.^2. ...
        *rAB.^4.*wB.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta).^2 + 2*aB.*betaAB_1.^3. ...
        *betaAB_2.*r.^2.*rAB.^3.*rB.*wB.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta).^2 + aB. ...
        *betaAB_1.^3.*betaAB_2.*r.^2.*rAB.^3.*wB.*sin(betaAB_2.*theta).*cos(betaAB_2. ...
        *theta).^2 + aB.*betaAB_1.^3.*betaAB_2.*r.*rA.*rAB.^3.*rB.*wB.*sin(betaAB_2.*theta). ...
        *cos(betaAB_2.*theta).^2 - aB.*betaAB_1.^3.*betaAB_2.*r.*rA.*rAB.^3.*wB.*sin(betaAB_2. ...
        *theta).*cos(betaAB_2.*theta).^2 - 3*aB.*betaAB_1.^3.*betaAB_2.*r.*rAB.^4.*rB.*wB. ...
        *sin(betaAB_2.*theta).*cos(betaAB_2.*theta).^2 - aB.*betaAB_1.^3.*betaAB_2.*r.*rAB.^3. ...
        *rB.*wB.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta).^2 + aB.*betaAB_1.^3.*betaAB_2.*rA. ...
        *rAB.^3.*rB.*wB.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta).^2 + 2*aB.*betaAB_1.^2. ...
        *betaAB_2.*r.^3.*rA.*rAB.^2.*wB.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta) - 2*aB. ...
        *betaAB_1.^2.*betaAB_2.*r.^3.*rAB.^3.*wB.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta) ...
        - 3*aB.*betaAB_1.^2.*betaAB_2.*r.^2.*rA.*rAB.^3.*wB.*sin(betaAB_2.*theta). ...
        *cos(betaAB_2.*theta) - aB.*betaAB_1.^2.*betaAB_2.*r.^2.*rA.*rAB.^2.*rB.*wB. ...
        *sin(betaAB_2.*theta).*cos(betaAB_2.*theta) + 3*aB.*betaAB_1.^2.*betaAB_2.*r.^2. ...
        *rAB.^4.*wB.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta) + aB.*betaAB_1.^2.*betaAB_2. ...
        *r.^2.*rAB.^3.*rB.*wB.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta) + 3*aB.*betaAB_1.^2. ...
        *betaAB_2.*r.*rA.*rAB.^3.*rB.*wB.*sin(betaAB_2.*theta).*cos(betaAB_2.*theta) - aB. ...
        *betaAB_1.^2.*betaAB_2.*r.*rA.*rAB.^2.*rB.^2.*wB.*sin(betaAB_2.*theta).*cos(betaAB_2. ...
        *theta) - 3*aB.*betaAB_1.^2.*betaAB_2.*r.*rAB.^4.*rB.*wB.*sin(betaAB_2.*theta). ...
        *cos(betaAB_2.*theta) + aB.*betaAB_1.^2.*betaAB_2.*r.*rAB.^3.*rB.^2.*wB.*sin(betaAB_2. ...
        *theta).*cos(betaAB_2.*theta) + aB.*betaAB_1.*betaAB_2.*r.^2.*rA.^2.*rAB.^2.*wB. ...
        *sin(betaAB_2.*theta) - aB.*betaAB_1.*betaAB_2.*r.^2.*rA.^2.*rAB.*rB.*wB.*sin(betaAB_2. ...
        *theta) - 2*aB.*betaAB_1.*betaAB_2.*r.^2.*rA.*rAB.^3.*wB.*sin(betaAB_2.*theta) + 2*aB. ...
        *betaAB_1.*betaAB_2.*r.^2.*rA.*rAB.^2.*rB.*wB.*sin(betaAB_2.*theta) + aB.*betaAB_1. ...
        *betaAB_2.*r.^2.*rA.*rAB.^2.*wB.*sin(betaAB_2.*theta) - aB.*betaAB_1.*betaAB_2.*r.^2. ...
        *rA.*rAB.*rB.*wB.*sin(betaAB_2.*theta) + aB.*betaAB_1.*betaAB_2.*r.^2.*rAB.^4.*wB. ...
        *sin(betaAB_2.*theta) - aB.*betaAB_1.*betaAB_2.*r.^2.*rAB.^3.*rB.*wB.*sin(betaAB_2. ...
        *theta) - aB.*betaAB_1.*betaAB_2.*r.^2.*rAB.^3.*wB.*sin(betaAB_2.*theta) + aB. ...
        *betaAB_1.*betaAB_2.*r.^2.*rAB.^2.*rB.*wB.*sin(betaAB_2.*theta) - aB.*betaAB_1. ...
        *betaAB_2.*r.*rA.^2.*rAB.^2.*rB.*wB.*sin(betaAB_2.*theta) - aB.*betaAB_1.*betaAB_2.*r. ...
        *rA.^2.*rAB.^2.*wB.*sin(betaAB_2.*theta) + aB.*betaAB_1.*betaAB_2.*r.*rA.^2.*rAB. ...
        *rB.^2.*wB.*sin(betaAB_2.*theta) + aB.*betaAB_1.*betaAB_2.*r.*rA.^2.*rAB.*rB.*wB. ...
        *sin(betaAB_2.*theta) + 2*aB.*betaAB_1.*betaAB_2.*r.*rA.*rAB.^3.*rB.*wB.*sin(betaAB_2. ...
        *theta) + aB.*betaAB_1.*betaAB_2.*r.*rA.*rAB.^3.*wB.*sin(betaAB_2.*theta) - 2*aB. ...
        *betaAB_1.*betaAB_2.*r.*rA.*rAB.^2.*rB.^2.*wB.*sin(betaAB_2.*theta) - 2*aB.*betaAB_1. ...
        *betaAB_2.*r.*rA.*rAB.^2.*rB.*wB.*sin(betaAB_2.*theta) + aB.*betaAB_1.*betaAB_2.*r.*rA. ...
        *rAB.*rB.^2.*wB.*sin(betaAB_2.*theta) - aB.*betaAB_1.*betaAB_2.*r.*rAB.^4.*rB.*wB. ...
        *sin(betaAB_2.*theta) + aB.*betaAB_1.*betaAB_2.*r.*rAB.^3.*rB.^2.*wB.*sin(betaAB_2. ...
        *theta) + aB.*betaAB_1.*betaAB_2.*r.*rAB.^3.*rB.*wB.*sin(betaAB_2.*theta) - aB. ...
        *betaAB_1.*betaAB_2.*r.*rAB.^2.*rB.^2.*wB.*sin(betaAB_2.*theta) + aB.*betaAB_1. ...
        *betaAB_2.*rA.^2.*rAB.^2.*rB.*wB.*sin(betaAB_2.*theta) - aB.*betaAB_1.*betaAB_2.*rA.^2. ...
        *rAB.*rB.^2.*wB.*sin(betaAB_2.*theta) - aB.*betaAB_1.*betaAB_2.*rA.*rAB.^3.*rB.*wB. ...
        *sin(betaAB_2.*theta) + aB.*betaAB_1.*betaAB_2.*rA.*rAB.^2.*rB.^2.*wB.*sin(betaAB_2. ...
        *theta))./(-betaAB_1.^4.*r.*rAB.^4.*cos(betaAB_2.*theta).^4 + betaAB_1.^3.*r.^2. ...
        *rAB.^3.*cos(betaAB_2.*theta).^3 + betaAB_1.^3.*r.*rA.*rAB.^3.*cos(betaAB_2.*theta).^3 ...
        - 4*betaAB_1.^3.*r.*rAB.^4.*cos(betaAB_2.*theta).^3 + betaAB_1.^3.*r.*rAB.^3.*rB. ...
        *cos(betaAB_2.*theta).^3 + betaAB_1.^3.*rA.*rAB.^3.*rB.*cos(betaAB_2.*theta).^3 ...
        - betaAB_1.^2.*r.^2.*rA.*rAB.^2.*cos(betaAB_2.*theta).^2 + 2*betaAB_1.^2.*r.^2.*rAB.^3. ...
        *cos(betaAB_2.*theta).^2 - betaAB_1.^2.*r.^2.*rAB.^2.*rB.*cos(betaAB_2.*theta).^2 + 4 ...
        *betaAB_1.^2.*r.*rA.*rAB.^3.*cos(betaAB_2.*theta).^2 - 2*betaAB_1.^2.*r.*rA.*rAB.^2. ...
        *rB.*cos(betaAB_2.*theta).^2 - 6*betaAB_1.^2.*r.*rAB.^4.*cos(betaAB_2.*theta).^2 + 4 ...
        *betaAB_1.^2.*r.*rAB.^3.*rB.*cos(betaAB_2.*theta).^2 - betaAB_1.^2.*rA.^2.*rAB.^2.*rB. ...
        *cos(betaAB_2.*theta).^2 + 2*betaAB_1.^2.*rA.*rAB.^3.*rB.*cos(betaAB_2.*theta).^2 ...
        - betaAB_1.^2.*rA.*rAB.^2.*rB.^2.*cos(betaAB_2.*theta).^2 - betaAB_1.*r.^2.*rA.*rAB.^2. ...
        *cos(betaAB_2.*theta) + betaAB_1.*r.^2.*rA.*rAB.*rB.*cos(betaAB_2.*theta) + betaAB_1. ...
        *r.^2.*rAB.^3.*cos(betaAB_2.*theta) - betaAB_1.*r.^2.*rAB.^2.*rB.*cos(betaAB_2.*theta) ...
        - betaAB_1.*r.*rA.^2.*rAB.^2.*cos(betaAB_2.*theta) + betaAB_1.*r.*rA.^2.*rAB.*rB. ...
        *cos(betaAB_2.*theta) + 5*betaAB_1.*r.*rA.*rAB.^3.*cos(betaAB_2.*theta) - 6*betaAB_1. ...
        *r.*rA.*rAB.^2.*rB.*cos(betaAB_2.*theta) + betaAB_1.*r.*rA.*rAB.*rB.^2.*cos(betaAB_2. ...
        *theta) - 4*betaAB_1.*r.*rAB.^4.*cos(betaAB_2.*theta) + 5*betaAB_1.*r.*rAB.^3.*rB. ...
        *cos(betaAB_2.*theta) - betaAB_1.*r.*rAB.^2.*rB.^2.*cos(betaAB_2.*theta) - betaAB_1. ...
        *rA.^2.*rAB.^2.*rB.*cos(betaAB_2.*theta) + betaAB_1.*rA.^2.*rAB.*rB.^2.*cos(betaAB_2. ...
        *theta) + betaAB_1.*rA.*rAB.^3.*rB.*cos(betaAB_2.*theta) - betaAB_1.*rA.*rAB.^2.*rB.^2. ...
        *cos(betaAB_2.*theta) - r.*rA.^2.*rAB.^2 + 2*r.*rA.^2.*rAB.*rB - r.*rA.^2.*rB.^2 + 2*r. ...
        *rA.*rAB.^3 - 4*r.*rA.*rAB.^2.*rB + 2*r.*rA.*rAB.*rB.^2 - r.*rAB.^4 + 2*r.*rAB.^3.*rB ...
        - r.*rAB.^2.*rB.^2);
end
