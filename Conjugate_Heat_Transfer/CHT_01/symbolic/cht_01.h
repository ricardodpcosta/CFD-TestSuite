// Auto-generated by generate_code.py

#ifndef CHT_01_H

#define CHT_01_H

#include <cmath>

// Global variables
double rA = 1.0;
double rAB = 0.75;
double rB = 0.5;
double kA = 2.0;
double kB = 1.0;
double nA = 4;
double nB = 4;
double wA = 1.0;
double wB = -1.0;

// Function uA
inline void uA(double x, double y, double res[2]) {
    double r = sqrt(pow(x, 2) + pow(y, 2));
    double theta = atan2(y, x);
    res[0] = -r*wA*sin(theta);
    res[1] = r*wA*cos(theta);
}

// Function uB
inline void uB(double x, double y, double res[2]) {
    double r = sqrt(pow(x, 2) + pow(y, 2));
    double theta = atan2(y, x);
    res[0] = -r*wB*sin(theta);
    res[1] = r*wB*cos(theta);
}

// Function phiA
inline double phiA(double x, double y) {
    double r = sqrt(pow(x, 2) + pow(y, 2));
    double theta = atan2(y, x);
    double aA = -kB/log(pow(rA, -kB)*pow(rAB, kA + kB)*pow(rB, -kA));
    double bA = log(pow(rAB, kA + kB)*pow(rB, -kA))/log(pow(rA, -kB)*pow(rAB, kA + kB)*pow(rB, -kA));
    double res = (aA*log(r) + bA)*cos(nA*theta);
    return res;
}

// Function phiB
inline double phiB(double x, double y) {
    double r = sqrt(pow(x, 2) + pow(y, 2));
    double theta = atan2(y, x);
    double aB = kA*cos(nA*theta)/(log(pow(rA, -kB)*pow(rAB, kA + kB)*pow(rB, -kA))*cos(nB*theta));
    double bB = -log(pow(rB, kA*cos(nA*theta)))/(log(pow(rA, -kB)*pow(rAB, kA + kB)*pow(rB, -kA)) \
        *cos(nB*theta));
    double res = (aB*log(r) + bB)*cos(nB*theta);
    return res;
}

// Function fA
inline double fA(double x, double y) {
    double r = sqrt(pow(x, 2) + pow(y, 2));
    double theta = atan2(y, x);
    double aA = -kB/log(pow(rA, -kB)*pow(rAB, kA + kB)*pow(rB, -kA));
    double bA = log(pow(rAB, kA + kB)*pow(rB, -kA))/log(pow(rA, -kB)*pow(rAB, kA + kB)*pow(rB, -kA));
    double res = nA*(aA*log(r) + bA)*(kA*nA*cos(nA*theta) - pow(r, 2)*wA*sin(nA*theta))/pow(r, 2);
    return res;
}

// Function fB
inline double fB(double x, double y) {
    double r = sqrt(pow(x, 2) + pow(y, 2));
    double theta = atan2(y, x);
    double aB = kA*cos(nA*theta)/(log(pow(rA, -kB)*pow(rAB, kA + kB)*pow(rB, -kA))*cos(nB*theta));
    double bB = -log(pow(rB, kA*cos(nA*theta)))/(log(pow(rA, -kB)*pow(rAB, kA + kB)*pow(rB, -kA)) \
        *cos(nB*theta));
    double res = nB*(aB*log(r) + bB)*(kB*nB*cos(nB*theta) - pow(r, 2)*wB*sin(nB*theta))/pow(r, 2);
    return res;
}

#endif
