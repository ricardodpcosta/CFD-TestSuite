// Auto-generated by generate_code.py

#ifndef CHT_01_H

#define CHT_01_H

#include <cmath>

// Global constants
double rA = 1.0;
double rAB = 0.75;
double rB = 0.5;
double alphaA = 2.0;
double alphaB = 1.0;
double wA = 1.0;
double wB = -1.0;
double n = 4.0;

// Function uA
inline void uA(double x, double y, double res[2]) {
    double r = sqrt(pow(x, 2) + pow(y, 2));
    double theta = atan2(y, x);
    res[0] = -r*wA*sin(theta);
    res[1] = r*wA*cos(theta);
}

// Function uB
inline void uB(double x, double y, double res[2]) {
    double r = sqrt(pow(x, 2) + pow(y, 2));
    double theta = atan2(y, x);
    res[0] = -r*wB*sin(theta);
    res[1] = r*wB*cos(theta);
}

// Function phiA
inline double phiA(double x, double y) {
    double r = sqrt(pow(x, 2) + pow(y, 2));
    double theta = atan2(y, x);
    double aA = alphaB/(alphaA*log(rAB) - alphaA*log(rB) + alphaB*log(rA) - alphaB*log(rAB));
    double bA = (alphaA*log(rAB) - alphaA*log(rB) - alphaB*log(rAB))/(alphaA*log(rAB) - alphaA*log(rB) \
        + alphaB*log(rA) - alphaB*log(rAB));
    double res = (aA*log(r) + bA)*cos(n*theta);
    return res;
}

// Function phiB
inline double phiB(double x, double y) {
    double r = sqrt(pow(x, 2) + pow(y, 2));
    double theta = atan2(y, x);
    double aB = alphaA/(alphaA*log(rAB) - alphaA*log(rB) + alphaB*log(rA) - alphaB*log(rAB));
    double bB = -alphaA*log(rB)/(alphaA*log(rAB) - alphaA*log(rB) + alphaB*log(rA) - alphaB*log(rAB));
    double res = (aB*log(r) + bB)*cos(n*theta);
    return res;
}

// Function fA
inline double fA(double x, double y) {
    double r = sqrt(pow(x, 2) + pow(y, 2));
    double theta = atan2(y, x);
    double aA = alphaB/(alphaA*log(rAB) - alphaA*log(rB) + alphaB*log(rA) - alphaB*log(rAB));
    double bA = (alphaA*log(rAB) - alphaA*log(rB) - alphaB*log(rAB))/(alphaA*log(rAB) - alphaA*log(rB) \
        + alphaB*log(rA) - alphaB*log(rAB));
    double res = (aA*alphaA*pow(n, 2)*log(r)*cos(n*theta) - aA*n*pow(r, 2)*wA*log(r)*sin(n*theta) \
        + alphaA*bA*pow(n, 2)*cos(n*theta) - bA*n*pow(r, 2)*wA*sin(n*theta))/pow(r, 2);
    return res;
}

// Function fB
inline double fB(double x, double y) {
    double r = sqrt(pow(x, 2) + pow(y, 2));
    double theta = atan2(y, x);
    double aB = alphaA/(alphaA*log(rAB) - alphaA*log(rB) + alphaB*log(rA) - alphaB*log(rAB));
    double bB = -alphaA*log(rB)/(alphaA*log(rAB) - alphaA*log(rB) + alphaB*log(rA) - alphaB*log(rAB));
    double res = (aB*alphaB*pow(n, 2)*log(r)*cos(n*theta) - aB*n*pow(r, 2)*wB*log(r)*sin(n*theta) \
        + alphaB*bB*pow(n, 2)*cos(n*theta) - bB*n*pow(r, 2)*wB*sin(n*theta))/pow(r, 2);
    return res;
}

#endif
